package evidencia.pkg3.bd;

import evidencia.pkg3.bd.CustomLists.Alumnos.Alumno;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author Ricardo
 */
public class EditStudentFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddFrame
     */
    ObjectId id;
    Conexion conn;
    HomeFrame home;
    StudentInfoFrame info;

    public EditStudentFrame(ObjectId ID, Conexion conexion, HomeFrame frame, StudentInfoFrame informacion) {
        initComponents();
        id = ID;
        conn = conexion;
        home = frame;
        info = informacion;
        
        ArrayList<Document> carreras = conn.getAllCareerData();

        if (!carreras.isEmpty()) {
            addCareerBtn.setText("+");
            addCareerBtn.setSize(30, 25);
            careerCB.setVisible(true);
            for (Document carrera : carreras) {
                careerCB.addItem(carrera.getString("carrera"));
            }
        } else {
            addCareerBtn.setText("Agregar carrera");
            addCareerBtn.setSize(270, 25);
            careerCB.setVisible(false);
        }

        ArrayList<Document> status = conn.getAllStatusData();

        if (!status.isEmpty()) {
            for (Document estatus : status) {
                statusCB.addItem(estatus.getString("estatus"));
            }
        } else {
        }
        
        // Poner información actual en los TextFields
        Document alumno = conn.getStudentData(id);
        
        studentNameTF.setText(alumno.getString("nombre"));
        studentLNTF.setText(alumno.getString("apellidos"));
        birthDP.setDate(new Fechas().formatLocalDate(alumno.getString("fechaNacimiento")));
        careerCB.setSelectedItem(conn.getCareerData(alumno.getObjectId("carrera")));
        statusCB.setSelectedItem(conn.getStatusData(alumno.getObjectId("estatus")));
        emailTF.setText(alumno.getString("email"));
        phoneTF.setText(alumno.getString("telefono"));
        addressTF.setText(alumno.getString("direccion"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        saveStudentBtn = new javax.swing.JButton();
        studentNameTF = new javax.swing.JTextField();
        studentLNTF = new javax.swing.JTextField();
        statusCB = new javax.swing.JComboBox<>();
        birthDP = new com.github.lgooddatepicker.components.DatePicker();
        careerCB = new javax.swing.JComboBox<>();
        addCareerBtn = new javax.swing.JButton();
        emailTF = new javax.swing.JTextField();
        phoneTF = new javax.swing.JTextField();
        addressTF = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 500));
        setSize(new java.awt.Dimension(400, 500));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Editar estudiante");
        jLabel1.setFont(new java.awt.Font("Space Grotesk Light", 1, 18)); // NOI18N

        jLabel2.setText("Nombre*");
        jLabel2.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel3.setText("Apellidos*");
        jLabel3.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel4.setText("Fec. Nac.*");
        jLabel4.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel5.setText("Carrera*");
        jLabel5.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel6.setText("Estatus*");
        jLabel6.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel8.setText("Email");
        jLabel8.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel9.setText("Teléfono");
        jLabel9.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel10.setText("Dirección");
        jLabel10.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        cancelBtn.setText("Cancelar");
        cancelBtn.setFont(new java.awt.Font("Space Grotesk Light", 1, 14)); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        saveStudentBtn.setText("Guardar");
        saveStudentBtn.setFont(new java.awt.Font("Space Grotesk Light", 1, 14)); // NOI18N
        saveStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStudentBtnActionPerformed(evt);
            }
        });

        studentNameTF.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        studentLNTF.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        statusCB.setMaximumRowCount(30);
        statusCB.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        birthDP.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        careerCB.setMaximumRowCount(30);
        careerCB.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N
        careerCB.setMaximumSize(null);
        careerCB.setMinimumSize(null);
        careerCB.setPreferredSize(null);

        addCareerBtn.setText("+");
        addCareerBtn.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N
        addCareerBtn.setMaximumSize(null);
        addCareerBtn.setMinimumSize(null);
        addCareerBtn.setPreferredSize(new java.awt.Dimension(30, 25));
        addCareerBtn.setRolloverEnabled(false);
        addCareerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCareerBtnActionPerformed(evt);
            }
        });

        emailTF.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        phoneTF.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        addressTF.setFont(new java.awt.Font("Space Grotesk Light", 0, 14)); // NOI18N

        jLabel11.setText("*Campo obligatorio");
        jLabel11.setFont(new java.awt.Font("Space Grotesk Light", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveStudentBtn)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(birthDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(studentNameTF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(studentLNTF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(careerCB, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addCareerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailTF)
                                    .addComponent(phoneTF)
                                    .addComponent(addressTF))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(studentNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(studentLNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(birthDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(careerCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCareerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(statusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(saveStudentBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void addCareerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCareerBtnActionPerformed
        // TODO add your handling code here:
        AddCareerFrame deptFrm = new AddCareerFrame(conn, null, null, this);
        deptFrm.pack();
        deptFrm.setLocationRelativeTo(null);
        deptFrm.setVisible(true);
    }//GEN-LAST:event_addCareerBtnActionPerformed

    private void saveStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStudentBtnActionPerformed
        // Datos obligatorios
        String nombre = studentNameTF.getText();
        String apellidos = studentLNTF.getText();
        ObjectId carrera = conn.getIdCareerData(careerCB.getItemAt(careerCB.getSelectedIndex()));
        ObjectId estatus = conn.getIdStatusData(statusCB.getItemAt(statusCB.getSelectedIndex()));
        String fechaNacimiento;
        
        // Comprobacion de que se haya ingresado una fecha valida
        if (birthDP.getDate().toString() != null) {
            fechaNacimiento = birthDP.getDate().toString();
        } else {
            fechaNacimiento = null;
        }
        
        System.out.println(studentNameTF.getText().isEmpty());
        
        // Datos optativos
        String email = emailTF.getText();
        String phone = phoneTF.getText();
        String address = addressTF.getText();

        if (fechaNacimiento != null) {
            Document student = new Document();
            student.append("nombre", nombre);
            student.append("apellidos", apellidos);
            student.append("carrera", carrera);
            student.append("fechaNacimiento", fechaNacimiento);
            student.append("estatus", estatus);
            student.append("email", email);
            student.append("telefono", phone);
            student.append("direccion", address);

            if (conn.updateStudentData(id, student, null)) {
                this.dispose();

                ArrayList<Document> students = conn.getAllStudentData();
                if (!students.isEmpty()) {
                    if (home != null) {
                        home.alumnosList.removeAllItem();
                    
                        for (Document alumno : students) {
                            ObjectId id = alumno.getObjectId("_id");
                            nombre = alumno.getString("nombre");
                            apellidos = alumno.getString("apellidos");
                            String career = careerCB.getItemAt(careerCB.getSelectedIndex());
                            String status = statusCB.getItemAt(statusCB.getSelectedIndex());
                            home.alumnosList.addItem(new Alumno(id, conn, home, nombre, apellidos, new Date(), career, status));
                        }
                    }
                    if (info != null) {
                        Document alumno = conn.getStudentData(id);
                        
                        // Poner la información obligatoria del Alumno en las etiquetas
                        info.studentName.setText(alumno.getString("nombre"));
                        info.studentLN.setText(alumno.getString("apellidos"));
                        info.studentBirth.setText(alumno.getString("fechaNacimiento"));
                        info.studentCareer.setText(conn.getCareerData(alumno.getObjectId("carrera")));
                        info.studentStatus.setText(conn.getStatusData(alumno.getObjectId("estatus")));

                        // Poner la información optativa del alumno en las etiquetas

                        String correo = alumno.getString("email");
                        if (!"".equals(correo)) {
                            info.studentEmail.setText(correo);
                            info.email.setVisible(true);
                            info.studentEmail.setVisible(true);
                        } else {
                            info.email.setVisible(false);
                            info.studentEmail.setVisible(false);
                        }


                        String telefono = alumno.getString("telefono");
                        System.out.println(!"".equals(telefono));
                        if (!"".equals(telefono)) {
                            info.studentPhone.setText(telefono);
                            info.phone.setVisible(true);
                            info.studentPhone.setVisible(true);
                        } else {
                            info.phone.setVisible(false);
                            info.studentPhone.setVisible(false);
                        }



                        String direccion = alumno.getString("direccion");
                        if (!"".equals(direccion)) {
                            info.studentAddress.setText(direccion);
                            info.address.setVisible(true);
                            info.studentAddress.setVisible(true);
                        } else {
                            info.address.setVisible(false);
                            info.studentAddress.setVisible(false);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_saveStudentBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditStudentFrame(null, null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addCareerBtn;
    private javax.swing.JTextField addressTF;
    private com.github.lgooddatepicker.components.DatePicker birthDP;
    private javax.swing.JButton cancelBtn;
    public javax.swing.JComboBox<String> careerCB;
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JButton saveStudentBtn;
    private javax.swing.JComboBox<String> statusCB;
    private javax.swing.JTextField studentLNTF;
    private javax.swing.JTextField studentNameTF;
    // End of variables declaration//GEN-END:variables
}
